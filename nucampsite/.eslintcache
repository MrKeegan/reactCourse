[{"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"2","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"3","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"4","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"5","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"6","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"7","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"8","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\footerComponent.js":"9","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"10","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"11","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"12","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"13","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"14","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"15","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"17","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"18","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"19","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"20","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"21","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"22","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js":"23","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"24","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"25"},{"size":695,"mtime":1609559549350,"results":"26","hashOfConfig":"27"},{"size":552,"mtime":1609896922643,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":3145,"mtime":1610676214181,"results":"30","hashOfConfig":"27"},{"size":2141,"mtime":1610675478393,"results":"31","hashOfConfig":"27"},{"size":1242,"mtime":1610212337202,"results":"32","hashOfConfig":"27"},{"size":8238,"mtime":1610675864695,"results":"33","hashOfConfig":"27"},{"size":4696,"mtime":1609894003359,"results":"34","hashOfConfig":"27"},{"size":1860,"mtime":1609784261520,"results":"35","hashOfConfig":"27"},{"size":1949,"mtime":1609796662027,"results":"36","hashOfConfig":"27"},{"size":1648,"mtime":1610675776218,"results":"37","hashOfConfig":"27"},{"size":11198,"mtime":1610676134461,"results":"38","hashOfConfig":"27"},{"size":303,"mtime":1609804585783,"results":"39","hashOfConfig":"27"},{"size":1053,"mtime":1610077195172,"results":"40","hashOfConfig":"27"},{"size":4243,"mtime":1609804576785,"results":"41","hashOfConfig":"27"},{"size":825,"mtime":1610676076460,"results":"42","hashOfConfig":"27"},{"size":632,"mtime":1610407270677,"results":"43","hashOfConfig":"27"},{"size":690,"mtime":1610674608659,"results":"44","hashOfConfig":"27"},{"size":189,"mtime":1610397704026,"results":"45","hashOfConfig":"27"},{"size":728,"mtime":1610674977534,"results":"46","hashOfConfig":"27"},{"size":3482,"mtime":1610681647768,"results":"47","hashOfConfig":"27"},{"size":1062,"mtime":1610680837752,"results":"48","hashOfConfig":"27"},{"size":243,"mtime":1610407366890,"results":"49","hashOfConfig":"27"},{"size":48,"mtime":1610673389993,"results":"50","hashOfConfig":"27"},{"size":174,"mtime":1610408332409,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"16nqa9o",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["108","109"],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["110","111","112","113","114"],"/* eslint-disable react/jsx-pascal-case */\nimport React, { Component } from 'react';\nimport { Loading } from './LoadingComponent';\nimport { Button, Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem,\n    Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { baseUrl } from '../shared/baseUrl'\n\nconst required = val => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            rating: '',\n            name: '',\n            comment: ''\n        };\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.addComment(this.props.campsiteId, values.rating, values.author, values.text);\n    }\n    \n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    \n    \n\n    render() {\n        return(\n            <React.Fragment>\n                <Button outline className=\"fa fa-pencil fa-lg\" onClick={this.toggleModal}> Submit Comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" className=\"form-control\" validators={{\n                                    required,\n                                    minLength: minLength(2),\n                                    maxLength: maxLength(15),\n                                }}/>\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be at least 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                                \n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea rows=\"6\" model=\".text\" id=\"text\" name=\"text\" className=\"form-control\" validators={{\n                                    required,\n                                    minLenght: minLength(1),\n                                    maxLength: maxLength(100),}}/>\n                            </div>\n                            <Errors\n                                    className=\"text-danger\"\n                                    model=\".text\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Please enter your comment.',\n                                        minLength: 'Please enter your comment.',\n                                        maxLength: 'Must be 100 characters or less'\n                                    }}\n                                />\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    } \n}\n\n// Because this component doesn't change state at all, it can be\n//  rendered as a functional component. (As opposed to our Main\n//  component that does change state.)\n// Displays a single campsite (object) that the user selects: \n//  image, title, description and comments.\nfunction RenderCampsite({campsite}) {\n    if (campsite) {\n        // Uses ReactStrap Card components to display the campsite\n        return (<div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={baseUrl  + campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>                \n        </div>)\n    }\n    return (<div />);\n}\n\n// Comments about the selected campsite are a part of the campsite object.\n//  On medium screens and up, they are displayed to the right of the campsite\n//  card. Otherwise, they will stack below.\n// Notice how we are able to use \"map\" to iterate through and display each\n//  comment in its own div.\nfunction RenderComments({comments, addComment, campsiteId}) {\n    if (comments) {\n        return(\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                { comments.map(comment => { \n                    return (\n                        <div>\n                            <div>{comment.text}</div>\n                            <div>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</div>\n                            <br />\n                        </div>\n                    )\n                })}\n                <CommentForm campsiteId={campsiteId} addComment={addComment} />\n            </div>\n        );\n    }\n    return(<div />);\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n    if (props.campsite) {\n        // This creates a separate Bootstrap container & row to display\n        //  the campsite (if there is one selected)\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments \n                        comments={props.comments}\n                        addComment={props.addComment}\n                        campsiteId={props.campsite.id}\n                    />\n                    \n                </div>\n            </div>\n        );\n    }\n    return (<div />);\n};\n\nexport default CampsiteInfo;","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",["115","116","117"],"import React, {Component} from 'react';\r\nimport {Nav, NavbarToggler, Collapse, NavItem, Navbar, NavbarBrand, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, FormLabel, Input, Label} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { focusableElements } from 'reactstrap/lib/utils';\r\n\r\nclass Header extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        \r\n        \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n    alert('Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}');\r\n    this.toggleModal();\r\n    event.preventDefault();\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <React.Fragment>\r\n           <Jumbotron fluid>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h1>NuCamp</h1>\r\n                            <h2>a better way to camp</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </Jumbotron>\r\n           <Navbar dark sticky=\"top\" expand=\"md\">\r\n            <div className=\"container\">\r\n                <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height =\"30\" width=\"30\" alt=\"NuCamp Logo\"/></NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNav}/>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                <Nav navbar>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/home\">\r\n                            <i className = \"fa fa-home fa-lg\"/> Home\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/directory\">\r\n                            <i className = \"fa fa-list fa-lg\"/> Directory\r\n                        </NavLink>\r\n                    </NavItem><NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                            <i className = \"fa fa-info fa-lg\"/> About\r\n                        </NavLink>\r\n                    </NavItem><NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                            <i className = \"fa fa-address-card fa-lg\"/> Contact Us\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <span className=\"navbar-text ml-auto\">\r\n                    <Button outline onClick={this.toggleModal}>\r\n                        <i className=\"fa fa-sign-in fa-lg\" /> Login\r\n                    </Button>\r\n                </span>\r\n                </Collapse>\r\n            </div>\r\n            </Navbar>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={input => this.username=input}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"text\" id=\"password\" name=\"password\"\r\n                                innerRef={input => this.username=input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={input => this.remember=input}/>\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\footerComponent.js",["118","119","120","121"],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["122","123","124","125","126","127","128","129"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Control, Form, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15),\r\n                                            }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15),\r\n                                            }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                            }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers (do not forget the area code)',\r\n                                            maxLength: 'Must be less than 15 numbers'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 4, offset: 2 }}>\r\n                                    <div className=\"form-group\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Contact;","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],["130","131"],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",["132"],"import { CAMPSITES } from '../shared/campsites';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Campsites = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    campsites: []\r\n}, action) => {\r\nswitch (action.type) {\r\n    case ActionTypes.ADD_CAMPSITES:\r\n        return {...state, isLoading: false, errMess: null, campsites: action.payload};\r\n    case ActionTypes.CAMPSITES_LOADING:\r\n        return {...state, isLoading: true, errMess: null, campsites: []};\r\n    case ActionTypes.CAMPSITES_FAILED:\r\n        return {...state, isLoading: false, errMess: action.payload};\r\n    default:\r\n        return state;\r\n}\r\n};","C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",["133"],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponent.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],"C:\\Users\\tonym\\OneDrive\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":36,"nodeType":"140","messageId":"141","endLine":5,"endColumn":40},{"ruleId":"138","severity":1,"message":"142","line":5,"column":42,"nodeType":"140","messageId":"141","endLine":5,"endColumn":51},{"ruleId":"138","severity":1,"message":"143","line":5,"column":60,"nodeType":"140","messageId":"141","endLine":5,"endColumn":65},{"ruleId":"138","severity":1,"message":"144","line":5,"column":67,"nodeType":"140","messageId":"141","endLine":5,"endColumn":70},{"ruleId":"138","severity":1,"message":"145","line":5,"column":72,"nodeType":"140","messageId":"141","endLine":5,"endColumn":75},{"ruleId":"138","severity":1,"message":"146","line":2,"column":136,"nodeType":"140","messageId":"141","endLine":2,"endColumn":145},{"ruleId":"138","severity":1,"message":"147","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":34,"column":11,"nodeType":"150","messageId":"151","endLine":34,"endColumn":113},{"ruleId":"152","severity":1,"message":"153","line":10,"column":33,"nodeType":"154","endLine":10,"endColumn":45},{"ruleId":"152","severity":1,"message":"153","line":11,"column":33,"nodeType":"154","endLine":11,"endColumn":45},{"ruleId":"152","severity":1,"message":"153","line":12,"column":33,"nodeType":"154","endLine":12,"endColumn":45},{"ruleId":"152","severity":1,"message":"153","line":13,"column":33,"nodeType":"154","endLine":13,"endColumn":45},{"ruleId":"138","severity":1,"message":"155","line":3,"column":25,"nodeType":"140","messageId":"141","endLine":3,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":84,"column":37,"nodeType":"154","endLine":92,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":109,"column":37,"nodeType":"154","endLine":117,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":134,"column":37,"nodeType":"154","endLine":143,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":160,"column":37,"nodeType":"154","endLine":167,"endColumn":39},{"ruleId":"156","severity":1,"message":"158","line":184,"column":45,"nodeType":"154","endLine":188,"endColumn":47},{"ruleId":"156","severity":1,"message":"159","line":194,"column":37,"nodeType":"154","endLine":195,"endColumn":66},{"ruleId":"156","severity":1,"message":"160","line":204,"column":37,"nodeType":"154","endLine":207,"endColumn":39},{"ruleId":"134","replacedBy":"161"},{"ruleId":"136","replacedBy":"162"},{"ruleId":"138","severity":1,"message":"163","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":19},{"ruleId":"138","severity":1,"message":"163","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":19},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormLabel' is defined but never used.","'focusableElements' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'LocalForm' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["164"],["165"],"'CAMPSITES' is defined but never used.","no-global-assign","no-unsafe-negation"]